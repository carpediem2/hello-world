K-近邻分类方法
KNN.py
from numpy import *     //科学计算包numpy
import operator         //运算符模块

def createDataSet():      //创建数据集和标签
    group = array([[1.0,1.1],[1.0,1.0],[0,0],[0,0.1]])
    labels = ['A','A','B','B']
    return group,labels

//inX:用于分类的输入向量，dataSet：输入的训练样本集，labels：标签向量，k:用于选择最近邻居的数目。标签向量的元素数目=矩阵dataSet行数
def classify(inX,dataSet,labels,k):      
dataSetSize = dataSet.shape[0] #数据集大小
    #计算距离
    diffMat = tile(inX,(dataSetSize,1)) - dataSet
    sqDiffMat = diffMat * 2
    sqDistances = sqDiffMat.sum(axis=1)
    distances = sqDistances**0.5
    #按距离排序
    sortedDistIndicies = distances.argsort()
    #统计前k个点所属的类别
    classCount = {}
    for i in range(k):
        votalLabel = labels[sortedDistIndicies[i]]
        classCount[votalLabel] = classCount.get(votalLabel,0) + 1
    sortedClassCount = sorted(classCount.items(),key = operator.itemgetter(1),reverse = True)
    #返回前k个点中频率最高的类别
Return sortedClassCount[0][0]
改变当前路径到存储KNN.py文件的位置，打开Python开发环境。
在按默认配置安装Python情况下，在Linux/Mac os终端内都可以直接输入python，
Windows命令提示符则为：c:\Python3.6\python.exe，进入Python交互式开发环境
进入开发环境之后：
1）导入上面的程序模块
>>>import KNN
为了确保输入相同的数据集，KNN模块中定义了函数createDataSet
>>>group,labels = KNN.createDataSet()
上面是为了创建变量group和labels
下面图片输入group和labels来检验是否正确的定义了变量
 每个数据点（每行）只使用两个特征，是为了方便实现数据可视化（二维）

如果是文本文件;
  def file2matrix(filename):
    fr = open(filename)
    arrayOLines = fr.readlines()
    numberOfLines = len(arrayOLines)  
    returnMat = zeros((numberOfLines, 3)) 
    classLabelVector = []
    index = 0
    for line in arrayOLines:
        line = line.strip()   //截取掉所有的回车字符，然后使用tab字符\t将上一步得到的整行数据分隔成一个元素列表
        listFromLine = line.split('\t')
        returnMat[index,:] = listFromLine[0:3]  //选取前三个元素，存储到特征矩阵中
        classLabelVector.append(int(listFromLine[-1])) //索引值-1表示列表中最后一列元素
        index += 1
    return returnMat, classLabelVector


测试代码：
        >>> datingDataMat, datingLabels = kNN.file2matrix('datingTestSet.txt')
>>> datingDataMat
>>> datingLabels
   注意点：'iteritems'是Python2.x版本，在Python3.x版本直接使用items就好。不然会报错（AttributeError: 'dict' object has no attribute 'iteritems'）

